// Generated by view binder compiler. Do not edit!
package uz.gita.a5.bookreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.gita.a5.bookreader.R;

public final class ItemBookBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView bookCard;

  @NonNull
  public final ImageView bookImg;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final TextView textAuthor;

  @NonNull
  public final TextView textBookName;

  private ItemBookBinding(@NonNull ConstraintLayout rootView, @NonNull CardView bookCard,
      @NonNull ImageView bookImg, @NonNull LinearLayout linear, @NonNull TextView textAuthor,
      @NonNull TextView textBookName) {
    this.rootView = rootView;
    this.bookCard = bookCard;
    this.bookImg = bookImg;
    this.linear = linear;
    this.textAuthor = textAuthor;
    this.textBookName = textBookName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBookBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBookBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_book, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBookBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.book_card;
      CardView bookCard = ViewBindings.findChildViewById(rootView, id);
      if (bookCard == null) {
        break missingId;
      }

      id = R.id.book_img;
      ImageView bookImg = ViewBindings.findChildViewById(rootView, id);
      if (bookImg == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.text_author;
      TextView textAuthor = ViewBindings.findChildViewById(rootView, id);
      if (textAuthor == null) {
        break missingId;
      }

      id = R.id.text_book_name;
      TextView textBookName = ViewBindings.findChildViewById(rootView, id);
      if (textBookName == null) {
        break missingId;
      }

      return new ItemBookBinding((ConstraintLayout) rootView, bookCard, bookImg, linear, textAuthor,
          textBookName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
